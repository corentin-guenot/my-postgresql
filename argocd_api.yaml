apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
  #  lens/type: app
  #  lens/from: rcd
  #    argocd.argoproj.io/instance: oip-ai-lab
  #  annotations:
  #    argocd-image-updater.argoproj.io/image-list: oip-ai-lab-api=eu.gcr.io/oip-cluster/realconsultingdata/python
  #    argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/git-creds
  #    argocd-image-updater.argoproj.io/rdk-api.update-strategy: semver
  name: argocd_api
  namespace: argocd
spec:
  destination:
    namespace: default
    server: https://kubernetes.default.svc
  project: my-postgresql
  source:
    helm:
      values: |
        global:
          ## @param global.imageRegistry Global Docker image registry
          ##
          imageRegistry: ""
          ## @param global.imagePullSecrets Global Docker registry secret names as an array
          ## e.g.
          ## imagePullSecrets:
          ##   - myRegistryKeySecretName
          ##
          imagePullSecrets: []
          ## @param global.storageClass Global StorageClass for Persistent Volume(s)
          ##
          storageClass: ""
          postgresql:
            ## @param global.postgresql.auth.postgresPassword Password for the "postgres" admin user (overrides `auth.postgresPassword`)
            ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)
            ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)
            ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)
            ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
            ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
            ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
            ## @param global.postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.replicationPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
            ##
            auth:
              postgresPassword: ""
              username: "cbadmin"
              password: "cbadmin"
              database: ""
              existingSecret: ""
              secretKeys:
                adminPasswordKey: ""
                userPasswordKey: ""
                replicationPasswordKey: ""
            ## @param global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)
            ##
            service:
              ports:
                postgresql: ""
    path: ./
    repoURL: https://github.com/corentin-guenot/my-postgresql.git
    targetRevision: develop
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true